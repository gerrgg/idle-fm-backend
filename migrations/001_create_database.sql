-- USERS
CREATE TABLE Users (
  id INT IDENTITY(1,1) PRIMARY KEY,
  username NVARCHAR(255) NOT NULL,
  email NVARCHAR(255) NOT NULL UNIQUE,
  password_hash NVARCHAR(255) NOT NULL,
  is_active BIT NOT NULL DEFAULT 0,
  created_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET()
);

-- ACTIVATIONS
CREATE TABLE Activations (
  id INT IDENTITY(1,1) PRIMARY KEY,
  user_id INT NOT NULL,
  token NVARCHAR(255) NOT NULL,
  expires_at DATETIMEOFFSET NOT NULL DEFAULT DATEADD(HOUR, 24, SYSDATETIMEOFFSET()),
  activated_at DATETIMEOFFSET NULL,
  created_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET(),
  CONSTRAINT FK_Activations_Users FOREIGN KEY (user_id)
    REFERENCES Users(id)
    ON DELETE CASCADE
);

-- PLAYLISTS
CREATE TABLE Playlists (
  id INT IDENTITY(1,1) PRIMARY KEY,
  user_id INT NOT NULL,
  title NVARCHAR(255) NOT NULL,
  created_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET(),
  views INT DEFAULT 0,
  likes INT DEFAULT 0,
  shares INT DEFAULT 0,
  is_public BIT DEFAULT 1,
  CONSTRAINT FK_Playlists_Users FOREIGN KEY (user_id)
    REFERENCES Users(id)
    ON DELETE CASCADE
);

-- VIDEOS
CREATE TABLE Videos (
  id INT IDENTITY(1,1) PRIMARY KEY,
  youtube_key NVARCHAR(50) NOT NULL UNIQUE,
  title NVARCHAR(255),
  created_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET()
);

CREATE INDEX idx_videos_youtube_key ON Videos(youtube_key);

-- GIFS
CREATE TABLE Gifs (
  id INT IDENTITY(1,1) PRIMARY KEY,
  tenor_key NVARCHAR(100) NOT NULL UNIQUE,
  title NVARCHAR(255),
  created_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET()
);

CREATE INDEX idx_gifs_tenor_key ON Gifs(tenor_key);

-- PLAYLISTVIDEOS (Join Table)
CREATE TABLE PlaylistVideos (
  playlist_id INT NOT NULL,
  video_id INT NOT NULL,
  gif_id INT NULL,
  position INT,
  added_at DATETIMEOFFSET DEFAULT SYSDATETIMEOFFSET(),
  PRIMARY KEY (playlist_id, video_id),
  CONSTRAINT FK_PlaylistVideos_Playlists FOREIGN KEY (playlist_id)
    REFERENCES Playlists(id)
    ON DELETE CASCADE,
  CONSTRAINT FK_PlaylistVideos_Videos FOREIGN KEY (video_id)
    REFERENCES Videos(id)
    ON DELETE CASCADE,
  CONSTRAINT FK_PlaylistVideos_Gifs FOREIGN KEY (gif_id)
    REFERENCES Gifs(id)
    ON DELETE SET NULL
);

CREATE INDEX idx_playlistvideos_position ON PlaylistVideos(playlist_id, position);
